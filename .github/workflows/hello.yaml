name: Just test

on: 
  push:
  workflow_dispatch:
    inputs:
      mavenProfile:
        description: 'Maven profile ("integration"|"subintegration"|"")'
        default: 'integration'
      mavenTestPattern:
        description: 'Maven test pattern'
      storyId:
        description: Story ID (e.g. ch1234)

jobs:
  something_to_test:
    runs-on: ubuntu-latest

    env:
      MAVEN_FLAGS: ''
      COMMIT_PREFIX: ''
      PR_BODY_STORY_TEXT: ''

    steps:
      # compute inputs
      - name: Add profile to MAVEN_FLAGS
        if: github.event.inputs.mavenProfile
        run: echo "MAVEN_FLAGS='${{ env.MAVEN_FLAGS }} -P ${{ github.event.inputs.mavenProfile }}'" >> $GITHUB_ENV
      - name: Add test pattern to MAVEN_FLAGS
        if: github.event.inputs.mavenTestPattern
        run: echo "MAVEN_FLAGS='${{ env.MAVEN_FLAGS }} -Dtest=${{ github.event.inputs.mavenTestPattern }} -DfailIfNoTests=false'" >> $GITHUB_ENV
      - name: Set COMMIT_PREFIX
        if: github.event.inputs.storyId
        run: echo "COMMIT_PREFIX='[${{ github.event.inputs.storyId }}] '" >> $GITHUB_ENV
      - name: Set PR body text
        if: github.event.inputs.storyId
        run: echo "PR_BODY_STORY_TEXT='Associated with [${{ github.event.inputs.storyId }}]'" >> $GITHUB_ENV
      - name: echo action url
        run: echo "https://github.com/${{github.repository}}/actions/runs/${{ github.run_id }}"
      - name: Validate input
        if: github.event.inputs.mavenTestProfile && github.event.inputs.mavenTestProfile != 'integration' && github.event.inputs.mavenTestProfile != 'subintegration'
        uses: actions/github-script@v3
        with:
          script: |
              core.setFailed('Maven test profile must be one of "integration"|"subintegration"|""')
      - name: Get branch name
        uses: nelonoel/branch-name@v1.0.1
      - name: Set SHORT_COMMIT_SHA
        run: |
          sha=${{ github.sha }}
          echo "SHORT_COMMIT_SHA=${sha:0:8}" >> $GITHUB_ENV
      - name: Print stuff
        run: |
          echo "branch name: ${{ env.BRANCH_NAME }}"
          echo "branch name: ${BRANCH_NAME}"
          echo "actor: ${{ github.actor }}"
          echo "github sha: ${{ github.sha }}"
          echo "github sha: ${GITHUB_SHA}"
          sha=${{ github.sha }}
          echo "short github sha: ${sha:0:8}"
          echo "short github sha: ${SHORT_COMMIT_SHA}"
          echo "github sha: ${GITHUB_SHA:0:8}"

